{"version":3,"sources":["utils/index.js","hooks/use-incrementing-number.hook.js","use-rainbow.hook.js","MagicRainbowButton.js","Center.js","App.js","reportWebVitals.js","index.js"],"names":["range","start","end","step","typeofStart","typeofEnd","TypeError","push","length","charCodeAt","String","fromCharCode","sample","arr","len","output","i","Math","floor","random","useIncrementingNumber","delay","React","useState","count","setCount","savedCallback","useRef","c","useEffect","id","setInterval","current","clearInterval","rainbowColors","paletteSize","hasBrowserSupport","window","CSS","registerProperty","getColorPropName","index","useRainbow","intervalDelay","prefersReducedMotion","matchMedia","isEnabled","matches","join","generateId","uniqueId","map","name","initialValue","syntax","inherits","intervalCount","reduce","acc","effectiveIntervalCount","value","kate","ButtonElem","styled","button","MagicRainbowButton","children","delegated","transitionDelay","onClick","colors","colorKeys","Object","keys","addEventListener","style","transition","background","div","p","padded","BREAKPOINT_SIZES","BREAKPOINTS","xs","sm","md","lg","xl","xsMin","smMin","mdMin","lgMin","xlMin","desktop","Wrapper","Center","WrappedButton","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b36757a3.chunk.js","sourcesContent":["// TODO: Modernize\n/* eslint-disable */\nexport const range = function(start, end, step) {\n    var range = [];\n    var typeofStart = typeof start;\n    var typeofEnd = typeof end;\n  \n    if (step === 0) {\n      throw TypeError('Step cannot be zero.');\n    }\n  \n    if (typeof end === 'undefined' && typeof 'step' === 'undefined') {\n      end = start;\n      start = 0;\n      typeofStart = typeof start;\n      typeofEnd = typeof end;\n    }\n  \n    if (typeofStart == 'undefined' || typeofEnd == 'undefined') {\n      throw TypeError('Must pass start and end arguments.');\n    } else if (typeofStart != typeofEnd) {\n      throw TypeError('Start and end arguments must be of same type.');\n    }\n  \n    typeof step == 'undefined' && (step = 1);\n  \n    if (end < start) {\n      step = -step;\n    }\n  \n    if (typeofStart == 'number') {\n      while (step > 0 ? end >= start : end <= start) {\n        range.push(start);\n        start += step;\n      }\n    } else if (typeofStart == 'string') {\n      if (start.length != 1 || end.length != 1) {\n        throw TypeError('Only strings with one character are supported.');\n      }\n  \n      start = start.charCodeAt(0);\n      end = end.charCodeAt(0);\n  \n      while (step > 0 ? end >= start : end <= start) {\n        range.push(String.fromCharCode(start));\n        start += step;\n      }\n    } else {\n      throw TypeError('Only string and number types are supported');\n    }\n  \n    return range;\n  };\n  /* eslint-enable */\n  \n  export const sample = (arr, len = 1) => {\n    let output = [];\n  \n    for (let i = 0; i < len; i++) {\n      output.push(arr[Math.floor(Math.random() * arr.length)]);\n    }\n  \n    return output;\n  };\n  \n  export const random = (min, max) =>\n    Math.floor(Math.random() * (max - min)) + min;\n  \n  export const sum = values => values.reduce((sum, value) => sum + value, 0);\n  export const mean = values => sum(values) / values.length;\n  \n  export const clamp = (val, min = 0, max = 1) =>\n    Math.max(min, Math.min(max, val));\n  \n  export const roundTo = (number, places = 0) =>\n    Math.round(number * 10 ** places) / 10 ** places;\n  \n  export const debounce = (callback, wait, timeoutId = null) => (...args) => {\n    window.clearTimeout(timeoutId);\n  \n    timeoutId = setTimeout(() => {\n      callback.apply(null, args);\n    }, wait);\n  };\n  \n  export const throttle = (func, limit) => {\n    let lastFunc;\n    let lastRan;\n    return function() {\n      const context = this;\n      const args = arguments;\n      if (!lastRan) {\n        func.apply(context, args);\n        lastRan = Date.now();\n      } else {\n        clearTimeout(lastFunc);\n        lastFunc = setTimeout(function() {\n          if (Date.now() - lastRan >= limit) {\n            func.apply(context, args);\n            lastRan = Date.now();\n          }\n        }, limit - (Date.now() - lastRan));\n      }\n    };\n  };\n  \n  export const isEmpty = obj => Object.keys(obj).length === 0;\n  \n  export const getInterpolatedValue = (y1, y2, ratio) => {\n    // We're assuming that `ratio` is a value between 0 and 1.\n    // If this were a graph, it'd be our `x`, and we're trying to solve for `y`.\n    // First, find the slope of our line.\n    const slope = y2 - y1;\n  \n    return slope * ratio + y1;\n  };\n  \n  export const pick = (obj, keys) => {\n    var o = {};\n    var i = 0;\n    var key;\n  \n    keys = Array.isArray(keys) ? keys : [keys];\n  \n    while ((key = keys[i++])) {\n      if (typeof obj[key] !== 'undefined') {\n        o[key] = obj[key];\n      }\n    }\n    return o;\n  };\n  \n  export const omit = function(obj, key) {\n    var newObj = {};\n  \n    for (var name in obj) {\n      if (name !== key) {\n        newObj[name] = obj[name];\n      }\n    }\n  \n    return newObj;\n  };\n  \n  export const convertArrayToMap = list =>\n    list.reduce(\n      (acc, item) => ({\n        ...acc,\n        [item.id]: item,\n      }),\n      {}\n    );\n  \n  // Either removes or adds an item to an array\n  // EXAMPLE: toggleInArray([1, 2], 3) -> [1, 2, 3]\n  // EXAMPLE: toggleInArray([1, 2], 2) -> [1]\n  export const toggleInArray = (arr, item) =>\n    arr.includes(item) ? arr.filter(i => i !== item) : [...arr, item];\n  \n  // Combines 2 arrays, removing duplicates.\n  // EXAMPLE: mergeUnique([1, 2], [2, 3]) -> [1, 2, 3]\n  export const mergeUnique = (arr1, arr2) =>\n    arr1.concat(arr2.filter(item => arr1.indexOf(item) === -1));\n  \n  export const findRight = (arr, predicate) =>\n    arr\n      .slice()\n      .reverse()\n      .find(predicate);\n  \n  export function requestAnimationFramePromise() {\n    return new Promise(resolve => window.requestAnimationFrame(resolve));\n  }\n  \n  export function setTimeoutPromise(duration) {\n    return new Promise(resolve => window.setTimeout(resolve, duration));\n  }\n  \n  export const capitalize = str => str[0].toUpperCase() + str.slice(1);\n  \n  export const deleteCookie = key => {\n    document.cookie = `${encodeURIComponent(\n      key\n    )}=; expires=Thu, 01 Jan 1970 00:00:00 GMT`;\n  };\n  \n  export const convertHexToRGBA = (hex, alpha = 1) => {\n    const r = parseInt(hex.slice(1, 3), 16);\n    const g = parseInt(hex.slice(3, 5), 16);\n    const b = parseInt(hex.slice(5, 7), 16);\n  \n    return `rgba(${r}, ${g}, ${b}, ${alpha})`;\n  };\n  \n  export const hyphenate = str => str.replace(/([A-Z])/g, '-$1').toLowerCase();\n  \n  export const delay = duration =>\n    new Promise(resolve => window.setTimeout(resolve, duration));\n  \n  export const getTimeOfDay = () => {\n    const now = new Date();\n    const hourOfDay = now.getHours();\n  \n    if (hourOfDay <= 4) {\n      return 'night';\n    } else if (hourOfDay <= 11) {\n      return 'morning';\n    } else if (hourOfDay <= 17) {\n      return 'afternoon';\n    } else if (hourOfDay <= 21) {\n      return 'evening';\n    } else {\n      return 'night';\n    }\n  };\n  \n  export const generateId = (len = 4) => {\n    // prettier-ignore\n    const characters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];\n  \n    return sample(characters, len).join('');\n  };\n  \n  export const normalize = (\n    number,\n    currentScaleMin,\n    currentScaleMax,\n    newScaleMin = 0,\n    newScaleMax = 1\n  ) => {\n    // FIrst, normalize the value between 0 and 1.\n    const standardNormalization =\n      (number - currentScaleMin) / (currentScaleMax - currentScaleMin);\n  \n    // Next, transpose that value to our desired scale.\n    return (newScaleMax - newScaleMin) * standardNormalization + newScaleMin;\n  };","import React from 'react';\n\nfunction useIncrementingNumber(delay) {\n  const [count, setCount] = React.useState(0);\n\n  const savedCallback = React.useRef(() => setCount(c => c + 1));\n\n  // Set up the interval.\n  React.useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n\n  return count;\n}\n\nexport default useIncrementingNumber;","/* eslint-disable array-callback-return */\nimport React from 'react';\n\nimport { range, generateId } from './utils/index';\nimport useIncrementingNumber from './hooks/use-incrementing-number.hook';\n\nconst rainbowColors = [\n  'hsl(1deg, 96%, 55%)', // red\n  'hsl(25deg, 100%, 50%)', // orange\n  'hsl(40deg, 100%, 50%)', // yellow\n  'hsl(45deg, 100%, 50%)', // yellow\n  'hsl(66deg, 100%, 45%)', // lime\n  'hsl(130deg, 100%, 40%)', // green\n  'hsl(177deg, 100%, 35%)', // aqua\n  'hsl(230deg, 100%, 45%)', // blue\n  'hsl(240deg, 100%, 45%)', // indigo\n  'hsl(260deg, 100%, 55%)', // violet\n  'hsl(325deg, 100%, 48%)', // pink\n];\nconst paletteSize = rainbowColors.length;\nconst WINDOW_SIZE = 3;\n\n// During compile-time build, we have to assume no browser support.\n// On mount, we'll check if `CSS.registerProperty` exists\nconst hasBrowserSupport =\n  typeof window !== 'undefined'\n    ? typeof window.CSS.registerProperty === 'function'\n    : false;\n\nconst getColorPropName = (id, index) => `--magic-rainbow-color-${id}-${index}`;\n\nconst useRainbow = ({ intervalDelay = 2000 }) => {\n  const prefersReducedMotion =\n    typeof window === 'undefined'\n      ? true\n      : window.matchMedia('(prefers-reduced-motion: no-preference)');\n\n  const isEnabled = hasBrowserSupport && prefersReducedMotion.matches;\n\n  const { current: uniqueId } = React.useRef(generateId());\n\n  // Register all custom properties\n  React.useEffect(() => {\n    if (!isEnabled) {\n      return;\n    }\n\n    range(0, WINDOW_SIZE).map(index => {\n      const name = getColorPropName(uniqueId, index);\n      const initialValue = rainbowColors[index];\n\n      CSS.registerProperty({\n        name,\n        initialValue,\n        syntax: '<color>',\n        inherits: false,\n      });\n    });\n  }, [WINDOW_SIZE, isEnabled]);\n\n  const intervalCount = useIncrementingNumber(intervalDelay);\n\n  return range(0, WINDOW_SIZE).reduce((acc, index) => {\n    const effectiveIntervalCount = isEnabled ? intervalCount : 0;\n\n    const name = getColorPropName(uniqueId, index);\n    const value = rainbowColors[(effectiveIntervalCount + index) % paletteSize];\n\n    return {\n      ...acc,\n      [name]: value,\n    };\n  }, {});\n};\n\nexport default useRainbow;","import React from 'react';\nimport styled from 'styled-components';\nimport { useEffect } from 'react';\n\nimport useRainbow from './use-rainbow.hook';\n\nvar kate = true;\n//var name = 'Kate';\n\n\nconst MagicRainbowButton = ({\n  children,\n  intervalDelay = 1300,\n  ...delegated\n}) => {\n  const transitionDelay = intervalDelay * 1.25;\n  //const [kush, setKush] = React.useState(false);\n  const onClick = () => {\n      if (!kate){\n          kate = true;\n      } else {\n          kate = false;\n      }\n  }\n\n  const colors = useRainbow({ intervalDelay });\n\n  const colorKeys = Object.keys(colors);\n\n  React.useEffect(() => {\n    window.addEventListener('click', onClick); \n  }, []);\n\n  return (\n    <ButtonElem\n      {...delegated}\n      style={{\n        ...colors,\n        transition: `\n          ${colorKeys[0]} ${transitionDelay}ms linear,\n          ${colorKeys[1]} ${transitionDelay}ms linear,\n          ${colorKeys[2]} ${transitionDelay}ms linear\n        `,\n        background: `\n          radial-gradient(\n            circle at top left,\n            var(${colorKeys[2]}),\n            var(${colorKeys[1]}),\n            var(${colorKeys[0]})\n          )\n        `,\n      }}\n    >\n      {kate ? \"Kate\" : \"Kush\"}\n    </ButtonElem>\n  );\n};\n\n// function changePerson(){\n//     if (kate === true){\n//       name = 'Kush';\n//       kate = false;\n//       console.log(name);\n//       return;\n//     } else {\n//         name = 'Kate';\n//         kate = true;\n//         console.log(name);\n//         return;\n//     }\n//   }\nconst ButtonElem = styled.button`\n  position: relative;\n  border: none;\n  color: white;\n  text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.15);\n`;\n\nexport default MagicRainbowButton;","import styled from 'styled-components';\n\nexport default styled.div`\n  display: flex;\n  justify-content: center;\n  padding-bottom: ${p => (p.padded ? 40 : 0)}px;\n`;","import './App.css';\nimport MagicRainbowButton from './MagicRainbowButton.js'\nimport styled from 'styled-components';\nimport Center from './Center';\n//Definitions\n\nvar kate = true;\n\nconst BREAKPOINT_SIZES = {\n xs: 320,\n sm: 540,\n md: 900,\n lg: 1024,\n xl: 1440,\n};\n\nconst BREAKPOINTS = {\n xs: `(max-width: ${BREAKPOINT_SIZES.xs}px)`,\n sm: `(max-width: ${BREAKPOINT_SIZES.sm}px)`,\n md: `(max-width: ${BREAKPOINT_SIZES.md}px)`,\n lg: `(max-width: ${BREAKPOINT_SIZES.lg}px)`,\n xl: `(max-width: ${BREAKPOINT_SIZES.xl}px)`,\n xsMin: `(min-width: ${BREAKPOINT_SIZES.xs + 1}px)`,\n smMin: `(min-width: ${BREAKPOINT_SIZES.sm + 1}px)`,\n mdMin: `(min-width: ${BREAKPOINT_SIZES.md + 1}px)`,\n lgMin: `(min-width: ${BREAKPOINT_SIZES.lg + 1}px)`,\n xlMin: `(min-width: ${BREAKPOINT_SIZES.xl + 1}px)`,\n desktop: `(min-width: ${BREAKPOINT_SIZES.sm + 1}px)`,\n};\n\nconst Wrapper = styled(Center)`\n margin-bottom: 0px;\n margin-top: var(margin-bottom);\n`;\n\nconst WrappedButton = styled(MagicRainbowButton)`\n width: 100%;\n height: 39.2em;\n font-size: 21px;\n border-radius: 0px;\n margin-left: 0px;\n @media ${BREAKPOINTS.sm} {\n   margin-top: 0px;\n   margin-left: 0;\n   width: 100%;\n }\n`;\n\n//App\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <Ripples>\n        <button style={{height: '100%', width : '100%' , position : 'fixed' , top : '0' , left : '0'}}> Ripple Button </button>\n      </Ripples> */}\n\n      <Wrapper>\n        <WrappedButton>{kate ? \"Kate\" : \"Kush\"}</WrappedButton>\n      </Wrapper>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}